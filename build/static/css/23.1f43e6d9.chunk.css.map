{"version":3,"sources":["webpack://src/assets/styles/aboutus.scss","webpack://src/assets/styles/_colors.scss","webpack://src/assets/styles/_breakpoints.scss"],"names":[],"mappings":"AAGA,aACI,WAAA,CACA,WAAA,CACA,iBAAA,CAEA,gBACI,eAAA,CACA,eAAA,CACA,wBAAA,CAEJ,gBACI,eAAA,CACA,wBAAA,CACA,aChBY,CDiBZ,aAAA,CAEJ,wBACI,oBAAA,CACA,oBAAA,CAAA,YAAA,CACA,kCAAA,CAAA,0BAAA,CACA,0BAAA,CAAA,kBAAA,CACA,4BAAA,CAAA,oBAAA,CACA,YAAA,CACA,eAAA,CACA,wEAEA,CAAA,2BACI,wBACA,CAAA,cACA,CAAA,aACA,CAAA,iBEeV,CAAA,oCFnBM,2BAOQ,cACA,CAAA,WAIZ,CAAA,CAAA,qBACI,eACA,CAAA,WACA,CAAA,iBACA,CAAA,oBACA,CAAA,8EACA,CAAA,gCACA,CAAA,8BACI,UACA,CAAA,iBACA,CAAA,QACA,CAAA,gCACI,aACA,CAAA,iBAKZ,CAAA,yBACI,iBACA,CAAA,YACA,CAAA,wEAEA,CAAA,2BACI,SACA,CAAA,gBACA,CAAA,aAIR,CAAA,wBACI,oBAAA,CAAA,YACA,CAAA,sBAAA,CAAA,cACA,CAAA,8BAAA,CAAA,sBACA,CAAA,gCAAA,CAAA,wBACA,CAAA,8BAAA,CAAA,sBAEA,CAAA,2BACI,iBACA,CAAA,SACA,CAAA,gBACA,CAAA,mBACA,CAAA,aACA,CAAA,yBAEJ,CAAA,0BACI,iBACA,CAAA,SACA,CAAA,gBACA,CAAA,aACA,CAAA,yBAGJ,CAAA,kCACI,iBACA,CAAA,YACA,CAAA,YACA,CAAA,eAEA,CAAA,6CACI,iBACA,CAAA,eACA,CAAA,QACA,CAAA,UACA,CAAA,SACA,CAAA,UACA,CAAA,yBAEA,CAAA,iDACI,WACA,CAAA,qBAIZ,CAAA,gDAEI,wBAEJ,CAAA,iDAEI,wBAEJ,CAAA,iDACI,wBAGJ,CAAA,iDACI,wBAIJ,CAAA,8DACI,cACA,CAAA,kEACC,oBAGL,CAAA,iEACI,cACA,CAAA,gBACA,CAAA,qEACI,iBAQhB,CAAA,eACI,WACA,CAAA,WACA,CAAA,eAEA,CAAA,yBACI,iBACA,CAAA,8BAAA,CAAA,sBACA,CAAA,UACA,CAAA,qCACI,WACA,CAAA,kBAGR,CAAA,kBACI,cACA,CAAA,wBACA,CAAA,aACA,CAAA,wBAEJ,CAAA,iBACI,aACA,CAAA,eACA,CAAA,eACA,CAAA,kBACA,CAAA,kBACA,CAAA,yBAEJ,CAAA,4BACI,iBACA,CAAA,OACA,CAAA,uBAEJ,CAAA,2BACI,cACA,CAAA,iBACA,CAAA,UAEJ,CAAA,6BACI,cACA,CAAA,iBACA,CAAA,WAEA,CAAA,gCACI,cACA,CAAA,gBAGR,CAAA,6BACI,cACA,CAAA,iBACA,CAAA,WACA,CAAA,+BACI,aACA,CAAA,qBAGR,CAAA,kBACI,cACA,CAAA,eACA,CAAA,wBAEJ,CAAA,2BACI,mBACA,CAAA,iBACA,CAAA,UACH,CAAA,6BACG,cACA,CAAA,aACA,CAAA,qBAEH,CAAA,8BAAA,gBAED,CAAA,2BACI,gBACA,CAAA,cACA,CAAA,iBACA,CAAA,WACA,CAAA,8BAAA,aACA,CAAA,6BAAA,kBAEJ,CAAA,4BACI,eACA,CAAA,sBACA,CAAA,+BAAA,aACA,CAAA,8BAAA,wBAEJ,CAAA,yBACI,gBACA,CAAA,cACA,CAAA,oBACA,CAAA,4BAAA,aACA,CAAA,2BAAA,oBAEJ,CAAA,4BACI,eACA,CAAA,oBACA,CAAA,+BAAA,aAAA,CAAA,gBACA,CAAA,8BAAA,wBAAA","file":"23.1f43e6d9.chunk.css","sourcesContent":["@import 'colors';\n@import 'breakpoints'; \n\n.wrapabtjoin{\n    height: 100%;\n    width: 100vw;\n    overflow-x: hidden;\n    \n    h4{\n        font-size: 10rem;\n        font-weight: 900;\n        text-transform: uppercase;\n    }\n    h1{\n        font-size: 12rem;\n        text-transform: uppercase;\n        color: $lightergraypurple;\n        margin: 0 auto;\n    }\n    .abtheader{\n        padding: 0 0 0 4.5rem;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        height: 100vh;\n        overflow: hidden;\n        background: url('../images/bGourstor.png') no-repeat top center/cover;\n\n        h2{\n            text-transform: uppercase;\n            font-size: 5rem;\n            color: $background;\n            position: relative;\n\n            @include media (\"screen\", \"<=phone\") {\n                font-size: 5rem;\n                left: 1.8rem;\n            }\n        }\n    }\n    .abtdes{\n        overflow: hidden;\n        height: 100%;\n        position: relative;\n        padding: 18.5rem  3rem;\n        background: $lightergraypurple url('../images/abtdesimg.png') no-repeat left center/cover;\n        background-blend-mode: luminosity;\n        .destext{  \n            width: 32vw;\n            position: relative; \n            left: 10%;  \n            p{\n                color: $background;\n                font-size: 1.25rem;\n            }\n        }\n    }\n\n    .joinHeader{\n        padding: 8rem 5rem;\n        height: 100vh;\n        background: url('../images/bGourstor.png') no-repeat top center/cover;\n\n        p{\n            width: 90%;\n            font-size: 1.7rem;\n            color: $lightergraypurple;\n        }\n\n    }\n    .comitWrap{\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        align-content: flex-start;\n        align-items: flex-start;\n\n        h2{\n            position: relative;\n            z-index: 2;\n            font-size: 4.3rem;\n            margin-bottom: 0.5rem;\n            color: darken($heading, 11%);\n            mix-blend-mode: luminosity;\n        }\n        p{\n            position: relative;\n            z-index: 2;\n            font-size: 1.5rem;\n            color: $background;\n            mix-blend-mode: hard-light;\n        }\n\n        .comitBox{\n            position: relative;\n            height: 750px;\n            padding: 2rem;\n            overflow: hidden;\n\n            .figurecom{\n                position: absolute;\n                margin-top: 5rem;\n                bottom: 0;\n                right: 3rem;\n                z-index: 1;\n                height: 70%;\n                mix-blend-mode: luminosity;\n\n                img{\n                    height: 100%;\n                    object-fit: scale-down;\n                }\n            }\n        }\n        .comitBox:nth-of-type(1){\n            /*background-color: rgb(71, 55, 73);*/\n            background-color: #2E2031;\n        }\n        .comitBox:nth-of-type(2){\n            /*background-color: #7e6771;*/\n            background-color: #7a636d;\n        }\n        .comitBox:nth-of-type(3){\n            background-color: #5d4e69;\n           /*background-color: saturate($darkpurple, 1%);*/\n        }\n        .comitBox:nth-of-type(4){\n            background-color: #343042;\n            /*background-color: #656580;*/\n\n        }\n        .exec, .models{\n            padding: 2.5rem;\n            p{\n             padding-right: 4.8rem;\n            }\n        }\n        .design, .members{\n            padding: 2.5rem;\n            text-align: right;\n            p{\n                padding-left: 4rem;\n            }\n        }\n    }\n\n   \n}\n\n.wrapabtjoinSM{\n    width: 100vw;\n    height: 100%;\n    overflow: hidden;\n    \n    .bgMobile{\n        position: absolute;\n        transform: translate(0,0);\n        z-index: -1;\n        .aboutSMimg{\n            width: 100vw;\n            object-fit: contain;\n        }\n    }\n    h1{\n        font-size: 5rem;\n        text-transform: uppercase;\n        color: #a284c9;\n        mix-blend-mode: exclusion;\n    }\n    p{\n        color: $heading;\n        font-size: 0.9rem;\n        font-weight: 500;\n        white-space: normal;\n        line-height: 1.4rem;\n        mix-blend-mode: difference;\n    }\n    .headersecSM{\n        position: relative;\n        top: 11%;\n        padding: 5rem 2rem 0.4rem 2rem;\n    }\n    .toprightSM{\n        padding: 0 2rem;\n        position: relative;\n        top: -0.5rem;\n    }\n    .joinHeaderSM{\n        padding: 0 2rem;\n        position: relative;\n        top: -1.3rem;\n\n        h1{\n            font-size: 7rem;\n            line-height: 7rem;\n        }\n    }\n    .joinusTextSM{\n        padding: 0 3rem;\n        position: relative;\n        top: -5.3rem;\n        p{\n            color: $heading;\n            mix-blend-mode: normal;\n        }\n    }\n    h4{\n        font-size: 4rem;\n        font-weight: 900;\n        text-transform: uppercase;\n    }\n    .roletextSM{\n        padding-bottom: 3rem;\n        position: relative;\n        top: -0.5rem;\n     p{\n        font-size: 1rem;\n        color: $heading;\n        mix-blend-mode: normal;\n     }\n     h4{font-size: 3.7rem;}\n    }\n    .exmemberSM{\n        text-align: right;\n        padding: 0 1rem;\n        position: relative;\n        top: -2.3rem;\n        h4{color: #2c1061;}\n        p{padding: 0 0 0 4rem;}\n    }\n    .designersSM{\n        text-align: left;\n        padding: 0 0.8rem 2.5rem 0.8rem;\n        h4{color: #f5915e;}\n        p{padding: 0 4.5rem 0 0.5rem;}\n    }\n    .modelsSM{\n        text-align: right;\n        padding: 0 1rem;\n        margin-bottom: 2.7rem;\n        h4{color:#5A95B4;}\n        p{padding: 0 0 0 3.5rem;}\n    }\n    .committeeSM{\n        text-align: left;\n        padding: 0 0.8rem 3rem 0.8rem;\n        h4{color: #f5915e; font-size: 3.7rem;}\n        p{padding: 0 4.5rem 0 0.5rem;}\n    }\n\n}","$lightergraypurple: #d9cedf;\n$muave: #a67db0;\n$purple: #2f0e47;\n$graypurple: #ac9fb2;\n$pinkish: #D6C7D7;\n$darkpurple: #61526d;\n$background: #f9f5ff;\n$text: #1a2632;\n$heading: #fdf3e4;\n$bluegray:  #6b728d;\n$f4color: #d65273;","//Simple, elegant and maintainable media queries in Sass\n//http://include-media.com\n//Author: Eduardo Boucas <mail@eduardoboucas.com>\n//A lot of content has been omiited and refractored to fit my needs\n//You can view the original file at the link above \n\n$breakpoints: (\n  'phone': 430px, \n  'tablet': 768px, \n  'desktop': 1024px\n) !default;\n\n$media-expressions: (\n  'screen': 'screen', \n  'print': 'print', \n  'handheld': 'handheld',\n  'retina2x': (\n    '(-webkit-min-device-pixel-ratio: 2)', \n    '(min-resolution: 192dpi)'\n  ), \n  'retina3x': (\n    '(-webkit-min-device-pixel-ratio: 3)', \n    '(min-resolution: 350dpi)'\n  )\n) !default;\n\n$unit-intervals: (\n  'px': 1, \n  'em': 0.01, \n  'rem': 0.1\n) !default;\n\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth($conditions, $i, parse-expression(nth($conditions, $i)));\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: '';\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + ', ';\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n@function get-query-branches($expressions) {\n  $result: '';\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + ' and ';\n    }\n\n    @if (type-of($expression) == 'string') {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == 'list') {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == 'list') {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join($result, str-replace-first($first, $member, $partial));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n@function parse-expression($expression) {\n  $operator: '';\n  $value: '';\n  $element: '';\n  $result: '';\n  $is-width: true;\n\n  @if (type-of($expression) != 'string') {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == '=') {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n    \n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    } \n       \n    @if ($operator == '>') {\n      $element: '(min-width: #{$result + $interval})';\n    } @else if ($operator == '<') {\n      $element: '(max-width: #{$result - $interval})';\n    } @else if ($operator == '>=') {\n      $element: '(min-width: #{$result})';\n    } @else if ($operator == '<=') {\n      $element: '(max-width: #{$result})';\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n@function to-number($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n  \n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n    \n  \n    @if $character == '-' {\n      $minus: true;\n    }\n    \n    @else if $character == '.' {\n      $divider: 1;\n    }\n    \n    @else {\n      @if type-of($index) != 'number' {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n      \n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n      \n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n      \n      $result: $result + $number;\n    }\n  }\n  \n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;\n  $index: index($strings, $unit);\n  \n  @if type-of($index) != 'number' {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n  \n  @return $number * nth($units, $index);\n}\n"]}