{"version":3,"sources":["webpack://src/assets/styles/bio.scss","webpack://src/assets/styles/_colors.scss","webpack://src/assets/styles/_breakpoints.scss"],"names":[],"mappings":"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","file":"31.bc6e31fd.chunk.css","sourcesContent":["@import 'colors';\n@import 'breakpoints'; \n\n.error-bio{\n  height: 100vh;\n  background-color: $bluegray;\n\n   h1{\n     font-size: 4rem;\n     color: $heading;\n     letter-spacing: 0.4rem;\n     position: relative;\n     top: 20%;\n     left: 18%;\n     line-height: 4rem;\n     width: 60%;\n     text-align: center;\n   }\n}\n.biowrapper{\n    height: 100%;\n    overflow-x: hidden;\n    margin-top: 8rem;\n\n    .bio-header{\n        margin: -2.3rem 4.3rem 2.3rem 4.3rem;\n        height: 80vh;\n        @include media (\"screen\", \"<=phone\") {\n          height: 100%;\n          margin: 1rem 0 0 0;\n          padding: 2rem 0.5rem;\n          text-align: center;\n      }\n\n        h1{\n            font-size: 11.5vw;\n            letter-spacing: 0.3rem;\n            margin-bottom: 1rem;\n            color: darken($darkpurple, 5%);\n            line-height: 12rem;\n            letter-spacing: 2px;\n            -webkit-text-stroke: 2px darken($darkpurple, 5%);\n            -webkit-text-fill-color: transparent;\n  \n\n            @include media (\"screen\", \"<=phone\") {\n              font-size: 4rem;\n              line-height: normal;\n              color: darken($darkpurple, 5%);\n              -webkit-text-stroke: 0.1px transparent;\n              -webkit-text-fill-color: darken($darkpurple, 5%); \n              font-size: 2.5rem;\n              margin-top: -1rem;\n            }\n        }\n        h4{\n            font-size: 2.5rem;\n            margin-left: 0.7rem;\n            font-weight: 600;\n            color: #3c343d;\n            letter-spacing: 4px;\n\n            @include media (\"screen\", \"<=phone\") {\n              margin-left: 0;\n              font-size: 1.2rem;\n              letter-spacing: normal;\n              padding: 0 3rem;\n              color: #625164;\n              font-weight: 500;\n          }\n        }\n\n    }\n}\n.actualbio{\n  margin-left: 2rem;\n  height: 100%;\n  width: 100%;\n  flex-direction: row-reverse;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n  overflow: scroll;\n  margin-bottom: 4rem;\n\n    @include media (\"screen\", \"<=phone\") {\n      margin-left: 0;\n      margin-bottom: 1.5rem;\n      justify-content: center;\n      align-items: center;\n      align-content: center;\n    }\n\n    .bioPic{\n      padding: 0;\n      @include media (\"screen\", \"<=phone\") {\n        width: 100vw;\n      }\n        img{\n            border-radius: 20px;\n            object-fit: cover;\n            width: 100%;\n            height: 100%;\n\n            @include media (\"screen\", \"<=phone\") {\n              border-radius: 1px;\n            }\n      \n        }\n    }\n    .biocontent{\n      min-height: 100%;\n      height: 100%;\n      margin-right: 6rem;\n      margin-top: 1rem;\n      padding: 2rem;\n\n      @include media (\"screen\", \"<=phone\") {\n        margin-right: 0;\n        padding: 2.3rem;\n      }\n \n        .desBio{\n          margin-top: -2.5rem;\n\n          @include media (\"screen\", \"<=phone\") {\n            margin-top: 1rem;\n          }\n            p{\n                font-size: 1.4rem;\n                line-height: 2.6rem;\n                color: rgb(29, 29, 58);\n                font-weight: 400;\n                white-space: normal;\n                word-break: break-word;\n                overflow-wrap: break-word;\n\n                @include media (\"screen\", \"<=phone\") {\n                  font-size: 1rem;\n                  line-height: 1.8rem;\n                }\n            }\n        }\n        .socialList{\n          display: flex;\n          justify-content: center;\n          align-items: flex-start;\n          align-content: center;\n          margin: 5rem 0;\n\n          .social{\n            display: flex;\n            flex-direction: column;\n            flex: 1;\n            padding: 0 4rem;\n\n            .icon{\n              width: 70%;\n            }\n          }\n  \n          a{\n            height: 100%;\n            transition: all 300ms ease-in-out;\n    \n            &:not(#not){\n              border-left: 0.5px solid rgb(190, 157, 212);\n            }\n          }\n        }\n    }\n}\n\n.portfolioTxt{\n  padding: 1rem 4rem;\n  margin-top: 5rem;\n\n  @include media (\"screen\", \"<=phone\") {\n    padding: 1rem 2rem;\n  }\n\n  h2{\n    font-size: 4.8vw;\n    color: $purple;\n    opacity: 0.9;\n    text-transform: uppercase;\n\n    @include media (\"screen\", \"<=phone\") {\n      font-size: 6.8vw;\n    }\n  }\n}\n\n  .showcase{\n    width: 100vw;\n    height: 100%;\n    margin: 3rem 0 6rem 0;\n    overflow: hidden;\n    cursor: move;\n}\n.sliderBio{\n  outline: none;\n  height: 100%;\n  \n  .slick-dots{\n    width: 100%;\n    height: 100px;\n    position: relative;\n  }\n  img{\n    width: 100%;\n    border-radius: 20px;\n  }\n}\n.slick-slide {\n  padding: none;\n  margin: 0.5rem;\n}\n.slick-slide, .slick-slide *{ \n  outline: none;\n }\n .slick-list{\n  height: 150vh;\n }\n\n.bioBttn{\n  margin: 2rem 0 0 0.5rem;\n\n  .biolinkbtn{\n    position: relative;\n    z-index: 50;\n    width: 400px;\n    height: 70px;\n    padding: 0 0.5rem;\n    transition: transform 500ms ease-in-out;\n    -webkit-transition: transform 500ms ease-in-out;\n    -moz-transition: transform 500ms ease-in-out;\n  \n    @include media (\"screen\", \"<=phone\") {\n      position: relative;\n      z-index: 100;\n      width: 300px;\n      height: 70px;\n    }\n  \n    &:hover{\n      transform: translate3d(6px, 0, 0);\n      -webkit-transform: translate3d(6px, 0, 0);\n      -moz-transform: translate3d(6px, 0, 0);\n    }\n    .biocirclelink{\n      background-color: #3d115ef3;\n      border-radius: 50%;\n      height: 70px;\n      width: 70px;\n      position: absolute;\n      z-index: 50;\n  \n      @include media (\"screen\", \"<=phone\") {\n        height: 60px;\n        width: 60px;\n      }\n    }\n    .biolinktext{\n      z-index: 50;\n      position: absolute;\n      width: 400px;\n      top: 1.1rem;\n      left: 1.2rem;\n      font-size: 1.3rem;\n      font-weight: 700;\n      color: $muave;\n  \n      @include media (\"screen\", \"<=phone\") {\n        width: 250px;\n        top: 1.1em;\n        left: 0.5em;\n        font-size: 1.1rem;\n        position: relative;\n        z-index: 100;\n      }\n    }\n  }\n}\n\n","$lightergraypurple: #d9cedf;\n$muave: #a67db0;\n$purple: #2f0e47;\n$graypurple: #ac9fb2;\n$pinkish: #D6C7D7;\n$darkpurple: #61526d;\n$background: #f9f5ff;\n$text: #1a2632;\n$heading: #fdf3e4;\n$bluegray:  #6b728d;\n$f4color: #d65273;","//Simple, elegant and maintainable media queries in Sass\n//http://include-media.com\n//Author: Eduardo Boucas <mail@eduardoboucas.com>\n//A lot of content has been omiited and refractored to fit my needs\n//You can view the original file at the link above \n\n$breakpoints: (\n  'phone': 430px, \n  'tablet': 768px, \n  'desktop': 1024px\n) !default;\n\n$media-expressions: (\n  'screen': 'screen', \n  'print': 'print', \n  'handheld': 'handheld',\n  'retina2x': (\n    '(-webkit-min-device-pixel-ratio: 2)', \n    '(min-resolution: 192dpi)'\n  ), \n  'retina3x': (\n    '(-webkit-min-device-pixel-ratio: 3)', \n    '(min-resolution: 350dpi)'\n  )\n) !default;\n\n$unit-intervals: (\n  'px': 1, \n  'em': 0.01, \n  'rem': 0.1\n) !default;\n\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth($conditions, $i, parse-expression(nth($conditions, $i)));\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: '';\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + ', ';\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n@function get-query-branches($expressions) {\n  $result: '';\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + ' and ';\n    }\n\n    @if (type-of($expression) == 'string') {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == 'list') {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == 'list') {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join($result, str-replace-first($first, $member, $partial));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n@function parse-expression($expression) {\n  $operator: '';\n  $value: '';\n  $element: '';\n  $result: '';\n  $is-width: true;\n\n  @if (type-of($expression) != 'string') {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == '=') {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n    \n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    } \n       \n    @if ($operator == '>') {\n      $element: '(min-width: #{$result + $interval})';\n    } @else if ($operator == '<') {\n      $element: '(max-width: #{$result - $interval})';\n    } @else if ($operator == '>=') {\n      $element: '(min-width: #{$result})';\n    } @else if ($operator == '<=') {\n      $element: '(max-width: #{$result})';\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n@function to-number($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n  \n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n    \n  \n    @if $character == '-' {\n      $minus: true;\n    }\n    \n    @else if $character == '.' {\n      $divider: 1;\n    }\n    \n    @else {\n      @if type-of($index) != 'number' {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n      \n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n      \n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n      \n      $result: $result + $number;\n    }\n  }\n  \n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;\n  $index: index($strings, $unit);\n  \n  @if type-of($index) != 'number' {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n  \n  @return $number * nth($units, $index);\n}\n"]}