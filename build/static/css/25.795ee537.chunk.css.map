{"version":3,"sources":["webpack://src/assets/styles/press.scss","webpack://src/assets/styles/_breakpoints.scss","webpack://src/assets/styles/_colors.scss"],"names":[],"mappings":"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","file":"25.795ee537.chunk.css","sourcesContent":["@import 'colors';\n@import 'breakpoints'; \n\n.pressWrapper{\n    background-color: #e0cdc5;\n    height: 100%;\n    border: 1px solid rgba(253, 253, 253, 0);\n \n    \n    .pressHeader{\n        padding: 6rem;\n        margin-top: 4rem;\n\n        @include media (\"screen\", \"<=phone\") {\n            padding: 3rem;\n            margin-top: 6rem;\n        }\n\n        .introH1{\n            font-size: 3rem;\n            color: $heading;\n\n            @include media (\"screen\", \"<=phone\") {\n            font-size: 1.8rem;\n            }\n        }  \n    }\n    .headerContent{\n        position: relative;\n     \n        display: flex;\n        justify-content: flex-start;\n        align-items: flex-start;\n        \n        .headerLeftpress{\n            align-self: flex-start;\n            .f4h1{\n                font-size: 12rem;\n                transform: rotate(-90deg);\n                color: $f4color;\n                position: relative;\n                left: -5rem;\n\n                @include media (\"screen\", \"<=phone\") {\n                font-size: 7rem;\n                }\n            }\n        }\n        .headerRightpress{\n            padding: 1rem 0;\n            align-self: flex-start;\n            position: relative;\n            left: -7rem;\n            top: 1rem;\n\n            @include media (\"screen\", \"<=phone\") {\n                top: 0;\n                left: -8.5rem;\n            }\n     \n            .f4expand{\n                font-size: 5rem;\n                -webkit-text-stroke: 1.2px $f4color;\n                -webkit-text-fill-color: transparent; \n    \n                @include media (\"screen\", \"<=phone\") {\n                    font-size: 2rem;\n                    -webkit-text-stroke: 0.8px $f4color;\n                    }\n            }\n            p{\n                font-size: 1.6rem;\n                color: $f4color;\n\n                @include media (\"screen\", \"<=phone\") {\n                    font-size: 1rem;\n                }\n            }\n        }\n    }\n    .f4bg{\n        background: #e0cdc5 url('../images/f4b.gif') no-repeat right center/ cover;\n        position: relative;\n        top: -0.55rem; \n\n        @include media (\"screen\", \"<=phone\") {\n           background-position: -200px top;\n        }\n    }\n\n    .F4speakers{\n       height: 140%;\n       padding: 5rem 2rem 2rem 2rem; \n       margin: 0 2rem 2rem 2rem;\n\n       @include media (\"screen\", \"<=phone\") {\n        padding: 5rem 1rem 2rem 1rem; \n        margin: 0;\n        }\n    }\n    \n\n    h4{\n        font-size: 7rem;\n        font-weight: 600;\n        color: $heading;\n        margin-left: 2rem;\n        letter-spacing: 3px;\n        -webkit-text-stroke: 2px $f4color;\n        -webkit-text-fill-color: transparent; \n        width: 100%;\n\n        @include media (\"screen\", \"<=phone\") {\n            font-size: 4rem;\n            -webkit-text-stroke: 2px $heading;\n            -webkit-text-fill-color: $heading;\n            mix-blend-mode: normal;  \n        }\n        span{\n            -webkit-text-fill-color: $f4color;\n            mix-blend-mode: hard-light;\n\n            @include media (\"screen\", \"<=phone\") {\n                -webkit-text-fill-color: $heading;\n                mix-blend-mode: normal;  \n            }\n        }\n    }\n\n    .speakerposters{\n        margin-top: 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        align-content: space-around;\n        flex-wrap: wrap;\n      \n        .poster{\n            display: flex;\n            flex-direction: column;\n            margin: 2rem;\n            img{\n                height: 500px;\n                @include media (\"screen\", \"<=phone\") {\n                  height: 320px; \n                }\n            }\n            .tuned{\n                height: 500px;\n                padding: 4rem;\n\n                h2{\n                text-align: center;\n                font-size: 3.6rem;\n                position: relative;\n                top: 12%;\n                color: $heading;\n\n                @include media (\"screen\", \"<=phone\") {\n                    top: 8%;\n                  }\n                }\n            }\n        }\n    }\n/*****************Press/News**************/\n/*****************Press/News**************/\n/*****************Press/News**************/\n    .otherNews{\n        padding: 8.5rem 5rem 6rem 5rem;\n        position: relative;\n        width: 100vw;\n    \n        @include media (\"screen\", \"<=phone\") {\n            padding: 2rem;\n            margin-top: 7rem;\n            width: 100vw;\n          }\n        .latest{\n            position: relative;\n            @include media (\"screen\", \"<=phone\") {\n             display: flex;\n             justify-content: center;\n             align-items: center;\n             align-content: center;\n             width: 100vw;\n            }\n\n            h4{\n                font-size: 10rem;\n                width: 100%;\n                position: relative;\n                top: 1.1rem;\n                -webkit-text-stroke: 2px $heading;\n                -webkit-text-fill-color: transparent; \n                z-index: 8;\n\n                @include media (\"screen\", \"<=phone\") {\n                    font-size: 4rem;\n                    text-align: center;\n                    -webkit-text-stroke: 2px $heading;\n                    -webkit-text-fill-color: $heading; \n                    top: -1.1rem;\n                    z-index: 2;\n                  }\n            }\n            .overlayh4{\n                -webkit-text-stroke: none;\n                -webkit-text-fill-color: $heading; \n                font-size: 10rem;\n                width: 100%;\n                position: relative;\n                margin-top: -12.5rem;\n                opacity: 0.7;\n                z-index: 2;\n\n                @include media (\"screen\", \"<=phone\") {\n                    display: none;\n                  }\n            }\n        }\n        .cardLink{\n            position: relative;\n            z-index: 200;\n        }\n        .cardDeck{\n            margin-top: -3.8rem;\n            position: relative;\n            z-index: 6;\n\n            @include media (\"screen\", \"<=phone\") {\n                margin-top: 1.5rem;\n                z-index: 7;\n              }\n        }\n     \n        .card{\n           background-color: rgb(255, 247, 232);\n           border: none;\n           min-height: 720px;\n\n           @include media (\"screen\", \"<=phone\") {\n            margin-bottom: 3.5rem;\n          }\n          .imgWrapNews{\n            height: 430px;\n            overflow: hidden;\n          }\n           img{\n               object-fit: cover;\n               object-position: center;\n            \n           }\n        }\n        .cardDeck2{\n            margin: 2.5rem auto;\n        }\n    }\n}","//Simple, elegant and maintainable media queries in Sass\n//http://include-media.com\n//Author: Eduardo Boucas <mail@eduardoboucas.com>\n//A lot of content has been omiited and refractored to fit my needs\n//You can view the original file at the link above \n\n$breakpoints: (\n  'phone': 430px, \n  'tablet': 768px, \n  'desktop': 1024px\n) !default;\n\n$media-expressions: (\n  'screen': 'screen', \n  'print': 'print', \n  'handheld': 'handheld',\n  'retina2x': (\n    '(-webkit-min-device-pixel-ratio: 2)', \n    '(min-resolution: 192dpi)'\n  ), \n  'retina3x': (\n    '(-webkit-min-device-pixel-ratio: 3)', \n    '(min-resolution: 350dpi)'\n  )\n) !default;\n\n$unit-intervals: (\n  'px': 1, \n  'em': 0.01, \n  'rem': 0.1\n) !default;\n\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth($conditions, $i, parse-expression(nth($conditions, $i)));\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: '';\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + ', ';\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n@function get-query-branches($expressions) {\n  $result: '';\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + ' and ';\n    }\n\n    @if (type-of($expression) == 'string') {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == 'list') {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == 'list') {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join($result, str-replace-first($first, $member, $partial));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n@function parse-expression($expression) {\n  $operator: '';\n  $value: '';\n  $element: '';\n  $result: '';\n  $is-width: true;\n\n  @if (type-of($expression) != 'string') {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == '=') {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n    \n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    } \n       \n    @if ($operator == '>') {\n      $element: '(min-width: #{$result + $interval})';\n    } @else if ($operator == '<') {\n      $element: '(max-width: #{$result - $interval})';\n    } @else if ($operator == '>=') {\n      $element: '(min-width: #{$result})';\n    } @else if ($operator == '<=') {\n      $element: '(max-width: #{$result})';\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n@function to-number($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n  \n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n    \n  \n    @if $character == '-' {\n      $minus: true;\n    }\n    \n    @else if $character == '.' {\n      $divider: 1;\n    }\n    \n    @else {\n      @if type-of($index) != 'number' {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n      \n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n      \n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n      \n      $result: $result + $number;\n    }\n  }\n  \n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;\n  $index: index($strings, $unit);\n  \n  @if type-of($index) != 'number' {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n  \n  @return $number * nth($units, $index);\n}\n","$lightergraypurple: #d9cedf;\n$muave: #a67db0;\n$purple: #2f0e47;\n$graypurple: #ac9fb2;\n$pinkish: #D6C7D7;\n$darkpurple: #61526d;\n$background: #f9f5ff;\n$text: #1a2632;\n$heading: #fdf3e4;\n$bluegray:  #6b728d;\n$f4color: #d65273;"]}