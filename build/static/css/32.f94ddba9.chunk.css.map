{"version":3,"sources":["webpack://src/assets/styles/gallery.scss","webpack://src/assets/styles/_breakpoints.scss","webpack://src/assets/styles/_colors.scss"],"names":[],"mappings":"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","file":"32.f94ddba9.chunk.css","sourcesContent":["@import 'colors'; \n@import 'breakpoints'; \n\n\n%circle {\n  height: 500px;\n  background: url('../images/gallery-circle.svg') no-repeat center center;\n  background-size: 90%;\n}\n\n%centeralignMobile{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n}\n\n/*****Gallery home****/\n\n.editorial{\n  @extend %centeralignMobile;\n  background: linear-gradient(rgba(0, 0, 0, 0), rgba(41, 41, 41, 0.614)), url('../images/editorialCover.webp') no-repeat center center/ cover, url('../images/editorialCover.png') no-repeat center center/ cover;\n  height: 100vh;\n  position: relative;\n\n  @include media (\"screen\", \"<=phone\") {\n    height: 100%;\n    padding: 10rem 0;\n  }\n}\n\n.shows {\n  @extend %centeralignMobile;\n  background: linear-gradient(rgba(0, 0, 0, 0), rgba(41, 41, 41, 0.614)),url('../images/the_gallery/galleryshowpat.webp') no-repeat center center/cover, url('../images/the_gallery/galleryshowpat.png') no-repeat center center/cover;\n  height: 100vh;\n\n   @include media (\"screen\", \"<=phone\") {\n    height: 100%;\n    padding: 10rem 0;\n  }\n}\n\n.wrapper {\n  overflow: hidden;\n  position: relative;\n\n  @include media (\"screen\", \"<=phone\") {\n    height: 100%;\n    width: 105vw;\n  }\n  a{\n    cursor: none;\n  }\n  .linkbox{\n    position: relative;\n    z-index: 400;\n    text-align: center;\n    overflow: hidden;\n\n    @include media (\"screen\", \"<=phone\") {\n      top: 1em;\n      left: 0.2em;\n    }\n\n    h1{\n      font-size: 5.2rem;\n      color: $pinkish;\n      letter-spacing: 2px;\n      mix-blend-mode: overlay;\n      z-index: 400;\n\n      @include media (\"screen\", \"<=phone\") {\n        font-size: 3rem;\n        mix-blend-mode: hard-light;\n        text-decoration: underline;\n      }\n\n      &:hover{\n        transition: all 800ms ease-in-out;\n        -webkit-text-stroke: 2px $pinkish;\n        -webkit-text-fill-color: transparent; \n      }\n    }\n  }\n}\n\n/***************Editorial/Shows****************/\n/***************Editorial/Shows****************/\n/***************Editorial/Shows****************/\n\n.editorialwrapper, .show-wrapper{\n  height: 100%;\n  width: 100vw;\n  overflow: hidden;\n  padding-bottom: 4rem;\n  padding-top: 8rem;\n  background: lighten($lightergraypurple, 10%);\n\n  .sectionBox {\n    @extend %centeralignMobile;\n    height: 100vh;\n    width: 100vw;\n  }\n\n\n  .left, .right, .sleft, .sright{\n    @extend %centeralignMobile;\n    height: 90%;\n    overflow: hidden;\n\n    img{\n      height: 78%;\n      position: relative;\n      border-radius: 5px;\n    }\n    .img1{\n      position: relative;\n      align-self: flex-start;\n      top: 1rem;\n    }\n    .img2{\n      position: relative;\n      align-self: flex-end;\n    }\n    picture{\n      @extend %centeralignMobile;\n      height: 100%;\n      width: 40vw;\n      padding: 3rem 2rem;\n  \n      img{\n        border-radius: 5px;\n        height: 100%;\n        width: 100%;\n        object-fit: cover;\n        object-position: center;\n      }\n      .img1E{\n        position: relative;\n        bottom: 8%;\n      }\n      .img2E{\n        position: relative;\n        top: 8%;\n      }\n    }\n  }\n\n\n  .description{\n    height: 499px;\n    width: 100%;\n    background: url('../images/gallery-circle.svg') no-repeat center center/ 90%;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    text-align: center;\n\n    .header{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      align-content: center;\n      position: relative;\n      border-radius: 50%;\n      height: 380px;\n      width: 370px;\n      overflow: hidden;\n    }\n  \n    h1{\n      color: $purple;\n      font-size: 3.3rem;\n      letter-spacing: 0.2rem;\n      width: 100%;\n\n      &:hover{\n          transition: all 400ms ease-in-out;\n          -webkit-text-stroke: 1.5px $purple;\n          -webkit-text-fill-color: transparent; \n        }\n      }\n\n    h3{\n      font-weight: 400;\n      font-size: 2rem;\n      position: relative;\n      top: -0.8rem;\n    }\n\n    .svg-line{\n      position: absolute;\n      left: 50%;\n      top: 93%\n    }\n  }\n}\n\n\n/*******Mobile Editorial/Shows**********/\n/*******Mobile Editorial/Shows**********/\n/*******Mobile Editorial/Shows**********/\n\n.editorialwrapperSM, .show-wrapperSM{\n  height: 100%;\n  width: 100vw;\n  overflow: hidden;\n  padding: 7rem 0 0 0;\n  background: lighten($lightergraypurple, 8%);\n\n  .introE{\n    @extend %centeralignMobile;\n    text-align: center;\n    width: 95vw;\n    margin-left: 0.5rem;\n    color: $darkpurple;\n    position: relative;\n    top: -1rem;\n\n    h1{\n      font-size: 3.5rem;\n    }\n\n    p{\n      font-size: 1.3rem;\n      position: relative;\n      top: -1.8rem;\n    }\n  }\n\n  .editorialSection{\n    @extend %centeralignMobile;\n    overflow: hidden;\n  }\n  .imgContainer{\n    position: relative;\n    z-index: 1;\n    img{\n      height: 480px;\n      width: 100%;\n      object-fit: cover;\n    }\n  }\n  .showSection{\n    @extend %centeralignMobile;\n    overflow: hidden;\n  }\n  .imgContainer{\n    position: relative;\n    z-index: 1;\n    img{\n      height: 480px;\n      width: 100%;\n      object-fit: cover;\n\n    }\n  }\n\n  .circleGallery{\n    height: 215px;\n    width: 215px;\n    border-radius: 50%;\n    position: absolute;\n    z-index: 200;\n    /*background-color: #7a4c7ae8;*/\n    background-color: #7a4c65b2;\n    mix-blend-mode: difference;\n  } \n  .title{\n    position: absolute;\n    z-index: 200;\n    border: 2.5px solid $graypurple;\n    border-radius: 50%;\n    height: 200px;\n    width: 200px;\n    padding: 1.5rem 0.5rem;\n    overflow: hidden;\n  }  \n  .titleHeader{\n    @extend %centeralignMobile;\n    height: 100%;\n    text-align: center;\n    position: relative;\n    z-index: 200;\n    h1, h3{\n      color: $heading;\n      mix-blend-mode: normal;\n    }\n    h3{\n      position: relative;\n      top: 0.8rem;\n      margin-bottom: 10px;\n      font-size: 1.3rem;\n    }\n    h1{\n      font-size: 2rem;\n      position: relative;\n      top: -0.5rem;\n    }\n    .longTxtEd{\n      font-size: 1.6rem;\n  }\n  }\n  .tlLine{\n    border: 1px solid $graypurple;\n    background-color: $graypurple;\n    position: absolute;\n    transform: translate(0, 240px);\n    width: 3px;\n    height: 180px;\n    padding: 8.82rem 0;\n    z-index: 2;\n  }\n  .navEdShow{\n    justify-content: flex-end;\n    align-content: flex-end;\n    align-items: center;\n    padding: 1rem 0;\n\n    .nvLinkbox{\n      padding: 3rem;\n    \n    }\n      h5{\n        font-size: 1rem;\n        color: $muave;\n        border-top: 1px solid rgba(184, 102, 184, 0.5);\n        border-bottom: 1px solid rgba(184, 102, 184, 0.5);\n        padding: 0.6rem 0;\n      }  \n  }\n\n}\n\n\n","//Simple, elegant and maintainable media queries in Sass\n//http://include-media.com\n//Author: Eduardo Boucas <mail@eduardoboucas.com>\n//A lot of content has been omiited and refractored to fit my needs\n//You can view the original file at the link above \n\n$breakpoints: (\n  'phone': 430px, \n  'tablet': 768px, \n  'desktop': 1024px\n) !default;\n\n$media-expressions: (\n  'screen': 'screen', \n  'print': 'print', \n  'handheld': 'handheld',\n  'retina2x': (\n    '(-webkit-min-device-pixel-ratio: 2)', \n    '(min-resolution: 192dpi)'\n  ), \n  'retina3x': (\n    '(-webkit-min-device-pixel-ratio: 3)', \n    '(min-resolution: 350dpi)'\n  )\n) !default;\n\n$unit-intervals: (\n  'px': 1, \n  'em': 0.01, \n  'rem': 0.1\n) !default;\n\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth($conditions, $i, parse-expression(nth($conditions, $i)));\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: '';\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + ', ';\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n@function get-query-branches($expressions) {\n  $result: '';\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + ' and ';\n    }\n\n    @if (type-of($expression) == 'string') {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == 'list') {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == 'list') {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join($result, str-replace-first($first, $member, $partial));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n@function parse-expression($expression) {\n  $operator: '';\n  $value: '';\n  $element: '';\n  $result: '';\n  $is-width: true;\n\n  @if (type-of($expression) != 'string') {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == '=') {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n    \n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    } \n       \n    @if ($operator == '>') {\n      $element: '(min-width: #{$result + $interval})';\n    } @else if ($operator == '<') {\n      $element: '(max-width: #{$result - $interval})';\n    } @else if ($operator == '>=') {\n      $element: '(min-width: #{$result})';\n    } @else if ($operator == '<=') {\n      $element: '(max-width: #{$result})';\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n@function to-number($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n  \n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n    \n  \n    @if $character == '-' {\n      $minus: true;\n    }\n    \n    @else if $character == '.' {\n      $divider: 1;\n    }\n    \n    @else {\n      @if type-of($index) != 'number' {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n      \n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n      \n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n      \n      $result: $result + $number;\n    }\n  }\n  \n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;\n  $index: index($strings, $unit);\n  \n  @if type-of($index) != 'number' {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n  \n  @return $number * nth($units, $index);\n}\n","$lightergraypurple: #d9cedf;\n$muave: #a67db0;\n$purple: #2f0e47;\n$graypurple: #ac9fb2;\n$pinkish: #D6C7D7;\n$darkpurple: #61526d;\n$background: #f9f5ff;\n$text: #1a2632;\n$heading: #fdf3e4;\n$bluegray:  #6b728d;\n$f4color: #d65273;"]}